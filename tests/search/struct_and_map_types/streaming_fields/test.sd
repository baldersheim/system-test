# Copyright Vespa.ai. All rights reserved.
schema test {
  document test {
    struct elem {
      field name type string {}
      field weight type int {}
    }
    struct complex_elem {
      field name type string {}
      field weight type int {}
      field str_map type map<string, int> {}
    }
    field elem_array type array<elem> {
      indexing: index | summary
    }
    field elem_map type map<string, elem> {
      indexing: index | summary
      struct-field key {
        match: word
      }
    }
    field elem_map_2 type map<string, elem> {
      indexing: index | summary
    }
    field str_int_map type map<string, int> {
      indexing: index | summary
    }
    field complex_elem_map type map<string, complex_elem> {
      indexing: index | summary
    }
    field elem_array_meo type array<elem> {
      indexing: index | summary
      summary: matched-elements-only
    }
    field elem_map_meo type map<string, elem> {
      indexing: index | summary
      summary: matched-elements-only
    }
    field elem_map_2_meo type map<string, elem> {
      indexing: index | summary
      summary: matched-elements-only
    }
    field str_int_map_meo type map<string, int> {
      indexing: index | summary
      summary: matched-elements-only
    }
    field complex_elem_map_meo type map<string, complex_elem> {
      indexing: index | summary
      summary: matched-elements-only
    }
  }
  document-summary filtered {
    summary documentid {}
    summary elem_array_filtered {
      source: elem_array
      matched-elements-only
    }
    summary elem_map_filtered {
      source: elem_map
      matched-elements-only
    }
    summary elem_map_2_filtered {
      source: elem_map_2
      matched-elements-only
    }
    summary str_int_map_filtered {
      source: str_int_map
      matched-elements-only
    }
    summary complex_elem_map_filtered {
      source: complex_elem_map
      matched-elements-only
    }
  }
}
