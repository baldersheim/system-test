# Copyright Vespa.ai. All rights reserved.
schema mpd {

  document mpd {
    field title type string {
      indexing: index | summary
    }
    field body type string {
      indexing: index
    }
    field order type float {
      indexing: attribute | summary
      summary-to: small
      attribute: fast-search
    }
    field seq type int {
      indexing: attribute
      attribute: fast-search
    }
    field cat type int {
      indexing: attribute
    }
  }

  rank-profile default {
    first-phase {
      expression: attribute(order)
    }
  }

  rank-profile inverse {
    first-phase {
      expression: 0.0-attribute(order)
    }
  }

  rank-profile retainkilo {
    match-phase {
      attribute: order
      max-hits: 1000
      max-filter-coverage: 1.0 # Not public API
    }
    first-phase {
      expression: attribute(order)
    }
  }

  rank-profile retaintenkilo {
    match-phase {
      attribute: order
      max-hits: 10000
      max-filter-coverage: 1.0
    }
    first-phase {
      expression: attribute(order)
    }
  }

  rank-profile inversekilo {
    match-phase {
      attribute: order
      order: ascending
      max-hits: 1000
      max-filter-coverage: 1.0
    }
    first-phase {
      expression: 0.0-attribute(order)
    }
  }

  rank-profile retainall {
    match-phase {
      attribute: order
      max-hits: 2147483647
      max-filter-coverage: 1.0
    }
    first-phase {
      expression: attribute(order)
    }
  }

  rank-profile diverse {
    diversity {
      attribute: cat
      min-groups: 10
    }
    match-phase {
      attribute: seq
      max-hits: 100
      max-filter-coverage: 1.0
    }
    first-phase {
      expression: attribute(seq)
    }
  }

  rank-profile secondphase {
    first-phase {
      expression: attribute(seq)
    }
    second-phase {
      rerank-count: 100
      expression: attribute(seq) * 100
    }
  }
  rank-profile diverse_secondphase {
    diversity {
      attribute: cat
      min-groups: 10
    }
    first-phase {
      expression: attribute(seq)
    }
    second-phase {
      rerank-count: 100
      expression: attribute(seq) * 100
    }
  }

  rank-profile undiverse {
    match-phase {
      attribute: seq
      max-hits: 100
      max-filter-coverage: 1.0
    }
    first-phase {
      expression: attribute(seq)
    }
  }

}
